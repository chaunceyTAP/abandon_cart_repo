import Head from 'next/head'
import Image from 'next/image'
import { Geist, Geist_Mono } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import 'bootstrap/dist/css/bootstrap.min.css'

import MyNav from '@/components/MyNav'
import Login from '@/components/Login'
import { useAppContext } from '../context/Context'
import ProductList from '@/components/ProductList'
import Cart from '@/components/Cart'
// import { createInstance } from "@adobe/alloy";
// const alloy = createInstance({ name: "alloy" });
// alloy('configure', {
//   orgId: '18F332CC5B4DB4150A495DF0@AdobeOrg',
//   edgeConfigId: 'dcf820d0-2016-41e5-a0ce-2853e214114b',
// })
// alloy("sendEvent", { ... });
const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export default function Home() {
  const { user, logoutUser, cart } = useAppContext()

  return (
    <>
      {/* <Provider store={store}> */}
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
        {/* <script>
  !function(n,o){o.forEach(function(o){n[o]||((n.__alloyNS=n.__alloyNS||
  []).push(o),n[o]=function(){var u=arguments;return new Promise(
  function(i,l){n[o].q.push([i,l,u])})},n[o].q=[])})}
  (window,["alloy"]);
</script> */}
<script src="https://cdn1.adoberesources.net/alloy/2.14.0/alloy.min.js" async></script>
<script src="https://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.min.js"></script>


<script src="https://assets.adobedtm.com/7595315f3cd2/2cf31ad99a6f/launch-533aee4b34b0-development.min.js" async></script>
      </Head>
      <div>
        {/* <MyNav /> */}
        {!user ? (
          <Login />
        ) : (
          <div>
            <ProductList />
            <Cart />
          </div>
        )}
      </div>
      {/* </Provider> */}
    </>
  )
}
